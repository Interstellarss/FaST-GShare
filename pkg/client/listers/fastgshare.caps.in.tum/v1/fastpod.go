/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "./pkg/apis/fastgshare.caps.in.tum/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// FaSTPodLister helps list FaSTPods.
// All objects returned here must be treated as read-only.
type FaSTPodLister interface {
	// List lists all FaSTPods in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.FaSTPod, err error)
	// FaSTPods returns an object that can list and get FaSTPods.
	FaSTPods(namespace string) FaSTPodNamespaceLister
	FaSTPodListerExpansion
}

// faSTPodLister implements the FaSTPodLister interface.
type faSTPodLister struct {
	indexer cache.Indexer
}

// NewFaSTPodLister returns a new FaSTPodLister.
func NewFaSTPodLister(indexer cache.Indexer) FaSTPodLister {
	return &faSTPodLister{indexer: indexer}
}

// List lists all FaSTPods in the indexer.
func (s *faSTPodLister) List(selector labels.Selector) (ret []*v1.FaSTPod, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.FaSTPod))
	})
	return ret, err
}

// FaSTPods returns an object that can list and get FaSTPods.
func (s *faSTPodLister) FaSTPods(namespace string) FaSTPodNamespaceLister {
	return faSTPodNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// FaSTPodNamespaceLister helps list and get FaSTPods.
// All objects returned here must be treated as read-only.
type FaSTPodNamespaceLister interface {
	// List lists all FaSTPods in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.FaSTPod, err error)
	// Get retrieves the FaSTPod from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1.FaSTPod, error)
	FaSTPodNamespaceListerExpansion
}

// faSTPodNamespaceLister implements the FaSTPodNamespaceLister
// interface.
type faSTPodNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all FaSTPods in the indexer for a given namespace.
func (s faSTPodNamespaceLister) List(selector labels.Selector) (ret []*v1.FaSTPod, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.FaSTPod))
	})
	return ret, err
}

// Get retrieves the FaSTPod from the indexer for a given namespace and name.
func (s faSTPodNamespaceLister) Get(name string) (*v1.FaSTPod, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("fastpod"), name)
	}
	return obj.(*v1.FaSTPod), nil
}
