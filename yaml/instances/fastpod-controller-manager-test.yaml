apiVersion: v1
kind: ServiceAccount
metadata:
  name: fastpod-controller-manager
  namespace: kube-system

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: fastpod-controller-manager-role-binder
subjects:
- kind: ServiceAccount
  name: fastpod-controller-manager
  namespace: kube-system
roleRef:
  kind: ClusterRole
  name: fastpod-controller-manager-role
  apiGroup: rbac.authorization.k8s.io

---

apiVersion: v1
kind: Service
metadata:
  name: fastpod-controller-manager-svc
  namespace: kube-system
spec:
  type: ClusterIP
  selector:
    app: fastpod-controller-manager
  ports:
  - name: controller-manager
    port: 10086
    targetPort: 10086

---

apiVersion: v1
kind: Pod
metadata:
  name: fastpod-controller-manager
  namespace: kube-system
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/path: "/metrics"
    prometheus.io/port: "9090"
  labels:
    app: fastpod-controller-manager
spec:
  serviceAccountName: fastpod-controller-manager
  priorityClassName: system-node-critical
  tolerations:
  - key: "CriticalAddonsOnly"
    operator: "Exists"
  - key: "node-role.kubernetes.io/master"
    operator: "Exists"
    effect: "NoSchedule"
  - key: "node-role.kubernetes.io/control-plane"
    operator: "Exists"
    effect: "NoSchedule"
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: "node-role.kubernetes.io/master"
            operator: "Exists"
  restartPolicy: Always
  containers:
  - name: fastpod-controller-manager-container
    image: kontonpuku666/fastpod-controller-manager:release
    imagePullPolicy: IfNotPresent
    volumeMounts:
    - name: kube-config
      mountPath: /root/.kube/config
      subPath: config
  volumes:
    - name: kube-config
      configMap:
        name: kube-config
